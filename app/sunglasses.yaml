swagger: '2.0'
info:
  title: Sunglasses API
  description: An API to support the sunglasses eval
  version: 1.0.0
host: "localhost:3001"
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /products:
    get:
      summary: Products
      description: |
        The Products endpoint allows you to search products based on different filters such as category and popularity as well as a search string
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
        - name: sort
          in: query
          description: The sort type on the response.  
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - description
      tags:
        - Product
      responses:
        '200':
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: >-
        The User Profile endpoint returns information about the Sunglasses user that
        has authorized with the application.
      tags:
        - User
      responses:
        '200':
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/products/{id}/add:
    post:
      summary: Add a Product
      description: |
        This endpoint allows you to add a given goal
      parameters:
        - name: id
          in: path
          description: The id of the product to add
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Shopping cart addition is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands:
    get:
      summary: Brands
      description: >
        Brands define groupings of products for browsing.
      parameters:
        - name: limit
          in: query
          description: The number of results to limit the search to
          required: false
          type: number
          format: int32
      tags:
        - Brands
      responses:
        '200':
          description: An array of categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Brand'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands/{id}/products:
    get:
      summary: Products in a Brand
      description: >
        All the products in a given brand
      parameters:
        - name: id
          in: path
          description: The id of the category to search for products in.
          required: true
          type: string
      tags:
        - Brands
      responses:
        '200':
          description: An array of products in the category
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Product:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a product.
      categoryId:
        type: string
        description: The id of the brand this product belongs to.
      name:
        type: string
        description: Name of product.
      description:
        type: string
        description: Description of product.
      imageURL:
        type: string
        description: The URL for the image representing the product
  Brand:
    type: object
    properties:
      id:
        type: string
        description: >-
          The unique identifier given to the category
      name:
        type: string
        description: The name of the category
  User:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Sunglasses user.
      last_name:
        type: string
        description: Last name of the Sunglasses user.
      email:
        type: string
        description: Email address of the Sunglasses user
      addedProduct:
        items:
          $ref: '#/definitions/Product'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
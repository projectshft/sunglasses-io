swagger: '2.0'
info:
  title: Sunglasses-IO
  description: An API to support the goalworthy platform
  version: 1.0.0
host: api.sunglasses-io.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /Sunglasses:
    get:
      summary: Sunglasses
      description: 
        The Sunglasses endpoint allows you to search sunglasses based on different filters such as brand and style as well as a search string
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
        - name: sort
          in: query
          description: The sort type on the response.  
          required: false
          type: array
          items:
            type: string
            enum:
              - brand
              - style
      tags:
        - Sunglasses
      responses:
        '200':
          description: An array of goals
          schema:
            type: array
            items:
              $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: >-
        The User Profile endpoint returns information about the Uber user that
        has authorized with the application.
      tags:
        - User
      responses:
        '200':
          description: Profile information for a user
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/accept:
    post:
      summary: Accept a Goal
      description: |
        This endpoint allows you accept a given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to accept
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Acceptance is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/achieve:
    post:
      summary: Achieve a Goal
      description: |
        This endpoint allows you achieve a given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to achieve
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Achievement is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/challenge/{userId}:
    post:
      summary: Challenge a Goal
      description: |
        This endpoint allows you challenge a user for given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to achieve
          required: true
          type: string
        - name: userId
          in: path
          description: The id user to challenge
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Challenge is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/goals/{id}/gift/{userId}:
    post:
      summary: Gift a Goal
      description: |
        This endpoint allows you gift a given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to gift
          required: true
          type: string
        - name: userId
          in: path
          description: The id user to gift the goal to
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Achievement is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /categories:
    get:
      summary: Categories
      description: >
        Categories define groupings of goals for browsing.
      parameters:
        - name: limit
          in: query
          description: The number of results to limit the search to
          required: false
          type: number
          format: int32
      tags:
        - Categories
      responses:
        '200':
          description: An array of categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /categories/{id}/goals:
    get:
      summary: Goals in Category
      description: >
        All the goals in a given cateogyr
      parameters:
        - name: id
          in: path
          description: The id of the category to search for goals in.
          required: true
          type: string
      tags:
        - Categories
      responses:
        '200':
          description: An array of goals in the category
          schema:
            type: array
            items:
              $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Goal:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a goal.
      categoryId:
        type: string
        description: The id of the category this goal belongs to.
      description:
        type: string
        description: Description of product.
      upVotes:
        type: integer
        format: int32
        description: The number of up votes given to a goal
      downVotes:
        type: integer
        format: int32
        description: The number of down votes given to a goal
      imageURL:
        type: string
        description: The URL for the image representing the goal
  Category:
    type: object
    properties:
      id:
        type: string
        description: >-
          The unique identifier given to the category
      name:
        type: string
        description: The name of the category
  User:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      acceptedGoals:
        items:
          $ref: '#/definitions/Goal'
      achievedGoals:
        items:
          $ref: '#/definitions/Goal'
      giftedGoals:
        items:
          $ref: '#/definitions/Goal'    
      challengedGoals:
        items:
          $ref: '#/definitions/Goal'        
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
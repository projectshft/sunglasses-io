swagger: '2.0'
info:
  title: Sunglasses API
  description: Get the sunglasses you like API
  version: 1.0.0
host: sunglasses.com
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /brands:
    get:
      summary: Get all brands
      description: 'All brands endpoint returns an array of all brands.'
      tags:
        - Brands
      responses:
        '200':
          description: An array of all brands
          schema:
            type: array
            items:
              $ref: '#/definitions/Brand'
        '404':
          description: Brands array is empty
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands/{id}/products:
    get:
      summary: Get all products of specific brand
      description: 'All products endpoint returns an array of all products of specific brand.'
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: unique id of the brand
          required: true
          type: string
      responses:
        '200':
          description: An array of all products of specific brand
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '404':
          description: Brand id Not Found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products:
    get:
      summary: Products
      description: |
        All products available.
      tags:
        - Products
      parameters:
        - name: keyword
          in: query
          description: Name of the product
          required: false
          type: string
      responses:
        '200':
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '404':
          description: There aren't any products to return
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      summary: Login user
      description: |
        User login
      tags:
        - User
      responses:
        '200':
          description: User is logged in
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          description: Invalid username or password
          schema:
            $ref: '#/definitions/Error'
        '400':
          description: Incorrectly formatted response
          schema:
            $ref: '#/definitions/Error'              
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/cart:
    get:
      summary: All products in the user cart
      description:    The Cart endpoint returns all products in the cart for the user.
      tags:
        - User
      parameters:
        -name: accessToken
        in: query
        description: token created for the user on the login
        required: true
        type: string
      responses:
        '200':
          description: List of Products in the user cart
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Need an accessToken to view the cart
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Cart is empty
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      post:
        summary: Add product to the user cart
        description:    The Cart endpoint add new product to the cart.
        tags:
          - User
        parameters:
          - name: accessToken
            in: query
            description: token created for the user on the login
            required: true
            type: string
          - name: product
            in: body
            description: the product added to the cart
            required: true
            type: object
        responses:
          '200':
            description: List of Products in the user cart
            schema:
              $ref: '#/definitions/User'
          '400':
            description: Invalid quantity
            schema:
              $ref: '#/definitions/Error'
          '401':
            description: Need an accessToken to view the cart
            schema:
              $ref: '#/definitions/Error'
          '404':
            description: Nothing to post or invalid quantity
            schema:
              $ref: '#/definitions/Error'
          '500':
          description: Product Has to have price
          schema:
            $ref: '#/definitions/Error'
          default:
            description: Unexpected error
            schema:
              $ref: '#/definitions/Error'
  /me/cart/{productId}:
    post:
      summary: Update product properties in the user cart
      description:    The Cart endpoint update product in the cart.
      tags:
      - User
      parameters:
        - name: accessToken
          in: query
          description: token created for the user on the login
          required: true
          type: string
        - name: productId
          in: path
          description: unique id of the product to be updated
          required: true
          type: string
      responses:
        '200':
          description: Product with updated properties
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Need an accessToken to update products in the cart
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Nothing to update
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete product from the user cart
      description:    The Cart endpoint deletes product with given id in the cart.
      tags:
      - User
      parameters:
        - name: accessToken
          in: query
          description: token created for the user on the login
          required: true
          type: string
        - name: productId
          in: path
          description: unique id of the product to be deleted
          required: true
          type: string
      responses:
        '200':
          description: Product with updated properties
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Need an accessToken to delete product in the cart
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Nothing to delete
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    type: object
    properties:
      user_id:
        type: integer
        description: 'Unique identifier representing a specific user'
      fist_name:
        type: string
        description: First name of the user.
      last_name:
        type: string
        description: Last name of the user.
      brands:
        type: array
        description: 'Array of brands ids for the user'
        items:
          $ref: '#/definitions/Brand'
  Brand:
    type: object
    properties:
      display_name:
        type: string
        description: Display name of the brand.
      id:
        type: string
        description: 'Unique identifier representing a specific brand'
  Product:
    type: object
    properties:
      name:
        type: string
        description: Product name.
      description:
        type: string
        description: Product description.
      price:
        type: integer
        description: Price of the product
      imageUrls:
        type: array
        items: 
          type: string
        description: Image of the product
      id:
        type: string
        description: 'Unique identifier representing a specific product'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

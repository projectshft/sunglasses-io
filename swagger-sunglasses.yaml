swagger: "2.0"
info:
  title: Sunglasses.io API
  description: An API to support the Sunglasses.io store website
  version: 1.0.0
host: localhost:3001
schemes:
  - https
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
paths:
  /products:
    get:
      tags:
        - Products
      summary: Retrieves list of products
      description: |
        The products endpoint allows you to search for products matching the query or retreive all products if no query is provided.
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
      responses:
        "200":
          description: An array of products
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
  /brands:
    get:
      tags:
        - Brands
      summary: Retrieves list of brands
      description: |
        The Brands endpoint retrieves the list of all brands that the store is offering products for.
      responses:
        "200":
          description: An array of brands
          schema:
            type: array
            items:
              $ref: "#/definitions/Brand"
  /brands/{brandId}/products:
    get:
      tags:
        - Brands
      summary: Retrieves list of products for a brand
      description: |
        This endpoint retrieves a list of products for the brand with the specified brandId.
      parameters:
        - name: brandId
          in: path
          description: unique identifier for a brand
          required: true
          type: string
      responses:
        "200":
          description: An array of products
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        "404":
          description: No Brand with that id Found
  /login:
    post:
      tags:
        - Login
      summary: Logs user into system
      description: |
        Upon provision of a correct username and password, this endpoint returns an access token for the user.
      parameters:
        - name: user
          in: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        "200":
          description: Access token
          schema:
            $ref: "#/definitions/Token"
        "400":
          description: Username or Password is missing
        "401":
          description: No user found matching that username and password
  /me/cart:
    get:
      tags:
        - Shopping Cart
      summary: Retrieves products in shopping cart
      description: |
        This endpoint retrieves the list of products currently in the user's shopping cart
      security: []
      parameters:
        - name: accessToken
          in: query
          description: Access Token for user
          required: true
          type: string
      responses:
        "200":
          description: An array of products in the user's cart
          schema:
            type: array
            items:
              $ref: "#/definitions/CartItem"
        "401":
          description: Invalid or no access token provided
    post:
      tags:
        - Shopping Cart
      summary: Adds a product to shopping cart
      description: |
        This endpoint adds a product to the user's shopping cart and returns the updated shopping cart
      parameters:
        - name: accessToken
          in: query
          description: Access Token for user
          required: true
          type: string
        - name: Id
          description: The id of the product to add to the user's cart
          in: body
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: string
      responses:
        "200":
          description: Updated array of products in shopping cart
          schema:
            type: array
            items:
              $ref: "#/definitions/CartItem"
        "401":
          description: Invalid or no access token provided
        "404":
          description: Product not found
        "409":
          description: Product is not available
  /me/cart/{productId}:
    post:
      tags:
        - Shopping Cart
      summary: Updates the quantity of specified product in shopping cart
      description: |
        This endpoint updates the quantity of the specified product in the user's shopping cart and returns the update shopping cart
      parameters:
        - name: accessToken
          in: query
          description: Access Token for user
          required: true
          type: string
        - name: productId
          in: path
          description: Unique identifier for the product
          type: string
          required: true
        - name: quantity
          in: body
          schema:
            type: object
            required:
              - quantity
            properties:
              quantity:
                type: string
      responses:
        "200":
          description: Updated array of products in shopping cart
          schema:
            type: array
            items:
              $ref: "#/definitions/CartItem"
        "401":
          description: Invalid or no access token provided
        "404":
          description: No product with that id found in shopping cart
        "409":
          description: Cart quantity cannot exceed available quantity
    delete:
      tags:
        - Shopping Cart
      summary: Removes specified product from shopping cart
      description: |
        This endpoint removes specified product from user's shopping cart and returns the updated shopping cart.
      parameters:
        - name: accessToken
          in: query
          description: Access Token for user
          required: true
          type: string
        - name: productId
          in: path
          description: Unique identifier for the product
          type: string
          required: true
      responses:
        "200":
          description: Updated array of products in shopping cart
          schema:
            type: array
            items:
              $ref: "#/definitions/CartItem"
        "401":
          description: Invalid or no access token provided
        "404":
          description: No product in shopping cart with that id found
definitions:
  Product:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a product.
      brandId:
        type: string
        description: The id of the brand that makes this product.
      description:
        type: string
        description: Description of product.
      name:
        type: string
        description: The name of the product.
      price:
        type: integer
        format: int32
        description: The price of the product.
      quantityAvailable:
        type: integer
        format: int32
        description: The quantity of items in stock for the product.
      imageUrls:
        type: array
        items:
          type: string
        description: Urls for images of the product.
  CartItem:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a product.
      brandId:
        type: string
        description: The id of the brand that makes this product.
      description:
        type: string
        description: Description of product.
      name:
        type: string
        description: The name of the product.
      price:
        type: integer
        format: int32
        description: The price of the product.
      quantityAvailable:
        type: integer
        format: int32
        description: The quantity of items in stock for the product.
      quantity:
        type: integer
        format: int32
        description: The quantity of this item in the users cart
      imageUrls:
        type: array
        items:
          type: string
        description: Urls for images of the product.
  Brand:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a brand.
      name:
        type: string
        description: Name of the brand
  Token:
    type: object
    properties:
      username:
        type: string
        description: username for user
      accessToken:
        type: string
        description: access token for user
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

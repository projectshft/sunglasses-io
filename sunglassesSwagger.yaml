swagger: '2.0'
info:
  title: Sunglasses.io
  description: Finally fix that ugly mug
  version: 1.0.0
host: api.sunglasses.io
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /glasses:
    get:
      summary: List of sunglasses
      description: |
         The Sunglasses endpoint allows you to access a list of sunglasses, and hopeully will let you query based on category or other properties
      tags:
        - Glasses
      responses:
        '200':
          description: An array of sunglasses
          schema:
            type: array
            items:
              $ref: '#/definitions/Sunglasses'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
  /glasses/{productId}:
    get:
      summary: Individual sunglasses by ID
      description: | 
        The Sunglasses endpoint allows you to access a list of sunglasses, and hopeully will let you query based on category or other properties
      parameters: 
        - name: productId
          in: path
          required: true
          type: integer
          format: int32
          description: Unique sunglasses identifier
      tags: 
      - Glasses
      responses:
        '200':
          description: A single sunglasses object
          schema:
            $ref: '#/definitions/Sunglasses'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
  /categories:
    get: 
      summary: List of categories for sunglasses
      description: |
        The categories endpoint allows you to access a list of categories of sunglasses
      tags:
        - Categories
      responses:
        '200':
          description: An array of sunglasses categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
  /categories/{categoryId}:
    get:
      summary: Individual category object
      description: |
        Allows you to access an individual category/brand name
      parameters: 
        - name: categoryId
          type: integer
          format: int32
          required: true
          in: path
          description: Unique Category ID
      tags:
        - Categories
      responses:
        '200':
          description: A single category object
          schema:
            $ref: '#/definitions/Category'
        default:
          description: Unexpected Error
          schema: 
            $ref: '#/definitions/Error404'
  /categories/{categoryId}/products:
    get: 
      summary: An array of sunglasses of a certain brand
      description: |
        Allows you to retrieve a list of suglasses according to a specific category/brand name
      parameters:
        - name: categoryId
          type: integer
          format: int32
          required: true
          in: path
          description: Unique category ID
      tags:
        - Glasses
        - Categories
      responses: 
        '200':
          description: An array of sunglasses
          schema:
            type: array
            items:
              $ref: '#/definitions/Sunglasses'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error404'
  /me/login:
    post:
      summary: User login
      description: | 
        A user can log in to access their cart information
      tags: 
        - User
      parameters:
        - in: body
          name: user
          description: The user login information
          schema:
            type: object
            required:
              - userName
            properties:
              userName:
                type: string
              password:
                type: string
          
      responses:
        '200':
          description: Successful login
          schema: 
            type: object
            properties: 
              token:
                type: string
                example: abcde1234
        '401':
          description: Invalid login information
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Unauthorized request
          schema:
            $ref: '#/definitions/Error403'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
        
  /me/cart:
    get:
      summary: User Cart
      description: |
        Returns the users cart as an array of products
      tags:
        - Cart
      parameters:
        - in: query
          name: token
          description: The user token information
          type: string
          required: true
      responses:
        '200':
          description: Cart information for the signed in user
          schema:
            $ref: '#/definitions/Cart'
        '401':
          description: Invalid login information
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Unauthorized request
          schema:
            $ref: '#/definitions/Error403'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
    post: 
      summary: Add to cart
      description: |
        Allows a user to add a product into their cart 
      tags: 
        - Cart
      parameters:
        - in: query
          name: token
          description: The user token information
          type: string
          required: true
          
        - in: body
          name: product
          description: The product ID
          schema:
            type: object
            properties:
              productId:
                type: string
              
      responses:
        '200':
          description: Item has been added to the user's cart
        '401':
          description: Invalid login information
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Unauthorized request
          schema:
            $ref: '#/definitions/Error403'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
  /me/cart/{productID}:
    post:
      summary: Update cart item
      description: |
        Allows a user to update quantities in the cart
      tags: 
        - Cart
      parameters:
        - name: productID
          description: Unique Identifier for the product
          required: true
          type: integer
          format: int32
          in: path
          

        - in: query
          name: token
          description: The user token information
          type: string
          required: true
          
        - in: body
          name: quantity
          description: The product quantity in cart
          schema:
            type: object
            properties:
              quantity:
                type: integer
                example: 45
      responses:
        200:
          description: Quantity has been updated
        '401':
          description: Invalid login information
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Unauthorized request
          schema:
            $ref: '#/definitions/Error403'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
    delete: 
      summary: Remove cart item
      description: |
        Allows the user to remove the item from the cart
      tags: 
        - Cart
      parameters:
        - name: productID
          description: Unique Identifier for the product
          required: true
          type: integer
          format: int32
          in: path
          

        - in: query
          name: token
          description: The user token information
          type: string
          required: true
      responses:
        200:
          description: Item has been removed successfully
        '401':
          description: Invalid login information
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Unauthorized request
          schema:
            $ref: '#/definitions/Error403'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error404'
definitions:
  Sunglasses:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: Unique identifier for a pair of sunglasses.
        example: 1
      categoryId:
        type: string
        description: The id of the category/brand the sunglasses belong to.
        example: 3
      description:
        type: string
        description: Description of product.
        example: The best glasses in the world
      price:
        type: integer
        format: int32
        description: The price of the pair of sunglasses (in $)
        example: 50
      imageURLs:
        type: array
        items:
          type: string
          example: https://image.sunglasses.io
        description: A collection of URLs for the glasses
  Category:
    type: object
    properties:
      id:
        type: string
        description: >-
          The unique identifier given to the category
      name:
        type: string
        description: The name of the category (brand name)
  Cart:
    type: array
    items:
      type: object
      properties:
        productId:
          type: integer
          format: int32
          example: 3
        quantity:
          type: integer
          format: int32
          description: Quantity of product in cart (max 1000)
          example: 50
      
  Error404:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 404
      message:
        type: string
        example: Resource not found
  Error401:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 401
      message:
        type: string
        example: Invalid login credentials
  Error403:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 403
      message:
        type: string
        example: Unauthorized Access


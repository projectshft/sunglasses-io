swagger: "2.0"
info:
  title: Sunglasses API
  description: An API to support the sunglasses store
  version: 1.0.0
host: api.sunglasses.com
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /products:
    get:
      summary: Products
      description: The Products endpoint returns all products and optionally allows you to filter products based on a search query string.
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
      tags:
        - Products
      responses:
        "200":
          description: An array of products
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        "404":
          description: No products match query
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /brands:
    get:
      summary: Brands
      description: The Brands endpoint returns information on all product brands.
      tags:
        - Brands
      responses:
        "200":
          description: An array of brands
          schema:
            type: array
            items:
              $ref: "#/definitions/Brand"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /brands/{id}/products:
    get:
      summary: Products in Brand
      description: This endpoint returns information on all products for a specific brand.
      parameters:
        - name: id
          in: path
          description: The id of the brand to filter products for
          required: true
          type: string
      tags:
        - Brands
      responses:
        "200":
          description: An array of products
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        "404":
          description: Brand ID not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /login:
    post:
      summary: Enter login credentials
      description: The login endpoint allows you to submit your login credentials
      tags:
        - Login
      responses:
        "200":
          description: Login successful
          schema:
            $ref: "#/definitions/Login"
        "400":
          description: No credentials entered
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Invalid credentials
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /me/cart:
    get:
      summary: View cart
      description: This endpoint allows you to view your cart
      tags:
        - Cart
      responses:
        "200":
          description: A cart
          schema:
            $ref: "#/definitions/Cart"
        "401":
          description: Valid credentials required
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Add product to cart
      description: This endpoint allows you to add a product to your cart
      tags:
        - Cart
      responses:
        "200":
          description: Cart updated
          schema:
            $ref: "#/definitions/Cart"
        "401":
          description: Valid credentials required
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /me/cart/{productId}:
    delete:
      summary: Remove product from cart
      description: This endpoint allows you to remove a product from your cart
      parameters:
        - name: productId
          in: path
          description: The id of the product to remove
          required: true
          type: string
      tags:
        - Cart
      responses:
        "200":
          description: Cart updated
          schema:
            $ref: "#/definitions/Cart"
        "401":
          description: Valid credentials
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Product ID not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
    post:
      summary: Change the quantity of a product in your cart
      description: This endpoint allows you to change the quantity of a specific product in your cart
      parameters:
        - name: productId
          in: path
          description: The id of the product to change the quantity for
          required: true
          type: string
      tags:
        - Cart
      responses:
        "200":
          description: Cart updated
          schema:
            $ref: "#/definitions/Cart"
        "400":
          description: Invalid quantity
          schema:
            $ref: "#/definitions/Error"
        "401":
          description: Valid credentials required
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Product ID not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
definitions:
  Product:
    type: object
    properties:
      id:
        type: string
        description: Unique product identifier
      categoryId:
        type: string
        description: Brand identifier
      name:
        type: string
        description: Name of product
      description:
        type: string
        description: Description of product
      price:
        type: string
        description: Price of product
      imageUrls:
        type: array
        items:
          type: string
        description: Product images
  Brand:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier
      name:
        type: string
        description: Brand name
  Login:
    type: object
    properties:
      username:
        type: string
        description: Username for login
      password:
        type: string
        description: Password for login
  Cart:
    type: array
    items:
      type: object
      description: Products in the cart
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

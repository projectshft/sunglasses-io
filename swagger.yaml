swagger: '2.0'
info:
  title: Sunglasses API
  description: An API to support the Sunglasses Display platform
  version: 1.0.0
host: api.sunglasses.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
paths:
  /api/brands:
    get:
      summary: Sunglasses Brands
      description: |
        The Brands endpoint allows you to search pairs of sunglasses based on different filters such as brands and products as well as a shopping cart.
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
        - name: sort
          in: query
          description: The sort type on the response.  
          required: false
          type: array
          items:
            type: string
            enum:
              - upVotes
              - dateCreated
      tags:
        - Brands
      responses:
        '200':
          description: An array of Brands
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/brands/:id/products:
    get:
      summary: Products of a Brand
      description: >-
        The Products endpoint returns information about the Uber user that
        has authorized with the application.
      tags:
        - Brands
      responses:
        '200':
          description: An array of Products for a particular Brand.
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /api/products: 
    get:
      summary: General Products
      description: >-
        The Products endpoint returns information about the Uber user that
        has authorized with the application.
      tags:
        - Products
      responses:
        '200':
          description: An array of General Products.
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /api/login:
    post:
      summary: Make the User Have to Login. 
      description: |
        This endpoint allows you require a user to login.
      parameters:
        - name: userId
          in: path
          description: The id user to challenge
          required: true
          type: string
        - name: password
          in: path
          description: The password of the user
          required: true
          type: string
          
      tags:
        - User
      responses:
        '200':
          description: Login Successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      
  /api/me/cart:
    get:
      summary: The User's Shopping Cart
      description: |
        This endpoint allows a User to access their shopping cart.
      tags:
        - User
      responses:
        '200':
          description: An array of items in the Shopping Cart.
          schema:
            $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
    post:
      summary: Add something new in the Shopping Cart
      description: |
        This endpoint allows you to add something new in the shopping cart. 
      parameters:
        - name: id
          in: path
          description: The id of the newly added item
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Achievement is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /api/me/cart/:productId:
    post: 
      summary: The name of one Product within your shopping cart. 
      description: |
        This endpoint allows you to look at one item in your shopping cart.  
      parameters:
        - name: id
          in: path
          description: The id of the item
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Successfully viewed.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
    delete:
      tags:
      - User
      summary: Remove item from Cart
      description: This can only be done by the logged in user.
      operationId: deleteSunglasses
      produces:
      - application/json
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"


 

definitions:
  Product:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a Product.
      categoryId:
        type: string
        description: The id of the category this Product belongs to.
      description:
        type: string
        description: Description of product.
      upVotes:
        type: integer
        format: int32
        description: The number of up votes given to the Product
      downVotes:
        type: integer
        format: int32
        description: The number of down votes given to the Product
      imageURL:
        type: string
        description: The URL for the image representing the Product
  Category:
    type: object
    properties:
      id:
        type: string
        description: >-
          The unique identifier given to the category
      name:
        type: string
        description: The name of the category
     
  User:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the user.
      last_name:
        type: string
        description: Last name of the user.
      email:
        type: string
        description: Email address of the user
      acceptedGoals:
        items:
          $ref: '#/definitions/User'
      achievedGoals:
        items:
          $ref: '#/definitions/User'
      giftedGoals:
        items:
          $ref: '#/definitions/User'    
      challengedGoals:
        items:
          $ref: '#/definitions/Product'        
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
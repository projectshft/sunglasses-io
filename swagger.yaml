openapi: 3.0.0
info:
  title: Sunglasses Shop API
  description: API endpoints for a sunglasses store.
  version: 1.0.0
servers:
  - url: https://virtserver.swaggerhub.com/NISSAN95SX95/SunglassesWireframe/1.0.0
    description: SunGlasses Shop
paths:
  /api/brands:
    get:
      tags:
        - Brands
      summary: Get all brands
      operationId: getBrands
      responses:
        "200":
          description: A list of brands
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Brand"
  /api/brands/{id}/products:
    get:
      tags:
        - Brands
      summary: Get products by brand ID
      operationId: getProductsByBrandId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Products of the specified brand
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /api/products:
    get:
      tags:
        - Products
      summary: Get all products
      operationId: getAllProducts
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
  /api/login:
    post:
      tags:
        - Authentication
      summary: Login to the system
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginCredentials"
        required: true
      responses:
        "200":
          description: Login successful
  /api/me/cart:
    get:
      tags:
        - Cart
      summary: Get items in the cart
      operationId: getCartItems
      responses:
        "200":
          description: Items in the cart
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CartItem"
    post:
      tags:
        - Cart
      summary: Add item to the cart
      operationId: addItemToCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      responses:
        "200":
          description: Item added to cart successfully
  /api/me/cart/{productId}:
    post:
      tags:
        - Cart
      summary: Add quantity of item to the cart
      operationId: addQuantityToCartItem
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductQuantity"
        required: true
      responses:
        "200":
          description: Quantity added to cart item successfully
    delete:
      tags:
        - Cart
      summary: Remove item from cart
      operationId: removeItemFromCart
      parameters:
        - name: productId
          in: path
          description: ID of the product to be removed from the cart
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Item removed from cart successfully
components:
  schemas:
    Brand:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        brandId:
          type: string
        price:
          type: number
    LoginCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    CartItem:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
    ProductQuantity:
      type: object
      properties:
        quantity:
          type: integer

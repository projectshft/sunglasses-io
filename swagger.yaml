swagger: "2.0"
info:
  version: 1.0.0
  title: "E-Commerce API"
  description: "API for managing brands, products, and user cart"
host: "localhost:3000"
schemes:
  - "http"
basePath: "/api"
produces:
  - "application/json"
paths:
  /brands:
    get:
      summary: "Get list of all brands"
      responses:
        200:
          description: 'A list of brands'
          schema:
            type: array
            items:
              $ref: "#/definitions/Brand"
  /brands/{id}/products:
    get:
      summary: "Get product by brand ID"
      parameters:
        - name: id
          in: path
          description: "The ID of the brand to get product for"
          required: true
          type: string
      responses:
        '200':
          description: 'Products retrieved successfully'
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /products: 
    get:
      summary: "Get list of all products"
      responses:
        200:
          description: "A list of products"
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
  /login:
    post:
      summary: "User login"
      description: "Login for the user"
      tags:
        - User
      responses:
        '200':
          description: 'Login successful'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/cart:
    get:
      summary: "Get user cart"
      responses:
        200:
          description: "List of items in cart"
          schema:
            type: array
            items:
              $ref: "#/definitions/Cart"
  /me/cart:
    post:
      summary: "Add product to user cart"
      description: "Add a product to the user's cart"
      parameters:
        - name: body
          in: body
          description: "Product to add to the cart"
          required: true
          schema:
            $ref: "#/definitions/Product"
  /me/cart/{productId}:
    delete:
      summary: "Delete an item from the cart"
      description: "Remove an item from the user's cart"
      parameters:
        - name: productId
          in: path
          description: "ID of the item to remove"
          required: true
          type: string
  /me/cart/{productId}:
    post:
      summary: "Change quantity of an item in cart"
      description: "Update the quantity of an item in the cart"
      parameters:
        - name: productId
          in: path
          description: "ID of the product to update in the cart"
          required: true
          type: string
        - name: body
          in: body
          description: "New quantity value for the product in the cart"
          required: true
          schema:
            type: object
            properties:
              quantity:
                type: integer
                description: "New quantity of the product in the cart"
definitions:
  Brand:
    type: object
    properties:
      id:
        type: integer
        format: int32
      brand:
        type: string
        description: brand name
  Product:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
        description: Name of the product
      brand:
        type: string
        description: Brand of the product
  User:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the user.
      last_name:
        type: string
        description: Last name of the user.
      email:
        type: string
        description: Email address of the user
  Cart: 
    type: array
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

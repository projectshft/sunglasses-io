swagger: '2.0'
info:
  title: Sunglasses.io API
  description: An API for sunglasses.io
  version: 1.0.0
host: localhost:3001
schemes:
  - http
basePath: /api
produces:
  - application/json
paths:
  /brands:
    get:
      summary: Get all brands in the store.
      description: >
        The brands endpoint allows you to access all the of brands in the store as well as the products associated with a given brand.
      parameters:
        - name: query
          in: query
          description: Search query string
          required: false
          type: string
        - name: sort
          in: query
          description: The sort type on the response.
          required: false
          type: array
          items:
            type: string
            enum:
              - upVotes
              - dateCreated
      tags:
        - Brands
      responses:
        '200':
          description: An array of brand objects with the id and name of each brand.
          schema:
            type: array
            items:
              $ref: '#/definitions/Brand'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands/{id}/products:
    get:
      summary: Get a list of products with the specified brand ID.
      description: >-
        The User Profile endpoint returns information about the Uber user that
        has authorized with the application.
      tags:
        - Brands
      responses:
        '200':
          description: List of products for a given brand
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '404':
          description: Brand not found
          schema:
            $ref: '#/definitions/Error'
  /products:
    get:
      summary: Get a list of products in the store.
      description: |
        This endpoint allows you to search for products matching a search query and/or sorted by select filters.
      parameters:
        - name: query
          in: query
          description: A string by which to search for products
          required: false
          type: string
        - name: sort
          in: query
          description: The sort type on the response
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - price
      tags:
        - Products
      responses:
        '200':
          description: Successful product search
        '400':
          description: Improperly formatted query
          schema:
            $ref: '#/definitions/Error'
  /api/login:
    post:
      summary: Allow a user to login.
      description: |
        This endpoint handles user authentication. Upon logging in, a user can access the shopping cart functionality.
      tags:
        - User
      responses:
        '200':
          description: Successful login
        '401':
          description: Invalid username or password
          schema:
            $ref: '#/definitions/Error'
        '400':
          description: Improperly formatted request
          schema:
            $ref: '#/definitions/Error'
  /me/cart:
    get:
      summary: Get a user's shopping cart 
      description: |
        This endpoint allows a logged in user to get a list of all the items in his/her shopping cart.
      parameters:
        - name: query
          in: query
          description: A string by which to search for items in the shopping car
          required: false
          type: string
        - name: sort
          in: query
          description: The sort type on the response
          required: false
          type: array
          items:
            type: string
            enum:
              - name
              - price
      tags:
        - User
      responses:
        '200':
          description: A list of products in a user's shopping cart
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/me/goals/{id}/gift/{userId}':
    post:
      summary: Gift a Goal
      description: |
        This endpoint allows you gift a given goal
      parameters:
        - name: id
          in: path
          description: The id of the goal to gift
          required: true
          type: string
        - name: userId
          in: path
          description: The id user to gift the goal to
          required: true
          type: string
      tags:
        - User
      responses:
        '200':
          description: Achievement is successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /categories:
    get:
      summary: Categories
      description: |
        Categories define groupings of goals for browsing.
      parameters:
        - name: limit
          in: query
          description: The number of results to limit the search to
          required: false
          type: number
          format: int32
      tags:
        - Categories
      responses:
        '200':
          description: An array of categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/categories/{id}/goals':
    get:
      summary: Goals in Category
      description: |
        All the goals in a given cateogyr
      parameters:
        - name: id
          in: path
          description: The id of the category to search for goals in.
          required: true
          type: string
      tags:
        - Categories
      responses:
        '200':
          description: An array of goals in the category
          schema:
            type: array
            items:
              $ref: '#/definitions/Goal'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Goal:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a goal.
      categoryId:
        type: string
        description: The id of the category this goal belongs to.
      description:
        type: string
        description: Description of product.
      upVotes:
        type: integer
        format: int32
        description: The number of up votes given to a goal
      downVotes:
        type: integer
        format: int32
        description: The number of down votes given to a goal
      imageURL:
        type: string
        description: The URL for the image representing the goal
  Category:
    type: object
    properties:
      id:
        type: string
        description: The unique identifier given to the category
      name:
        type: string
        description: The name of the category
  User:
    type: object
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      acceptedGoals:
        items:
          $ref: '#/definitions/Goal'
      achievedGoals:
        items:
          $ref: '#/definitions/Goal'
      giftedGoals:
        items:
          $ref: '#/definitions/Goal'
      challengedGoals:
        items:
          $ref: '#/definitions/Goal'
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
